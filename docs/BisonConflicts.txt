src/parser.yy: warning: 2 shift/reduce conflicts [-Wconflicts-sr]
src/parser.yy: warning: 17 reduce/reduce conflicts [-Wconflicts-rr]
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "%=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 47: postfix_expression "%=" assignment_expression
                                  ↳ 33: conditional_expression
                                        ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                              ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                  "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 47: postfix_expression "%=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "&&=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 36: postfix_expression "&&=" assignment_expression
                                   ↳ 33: conditional_expression
                                         ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                               ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                   "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 36: postfix_expression "&&=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "&=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 39: postfix_expression "&=" assignment_expression
                                  ↳ 33: conditional_expression
                                        ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                              ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                  "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 39: postfix_expression "&=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "**=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 48: postfix_expression "**=" assignment_expression
                                   ↳ 33: conditional_expression
                                         ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                               ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                   "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 48: postfix_expression "**=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "*=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 45: postfix_expression "*=" assignment_expression
                                  ↳ 33: conditional_expression
                                        ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                              ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                  "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 45: postfix_expression "*=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "+=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 43: postfix_expression "+=" assignment_expression
                                  ↳ 33: conditional_expression
                                        ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                              ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                  "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 43: postfix_expression "+=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "-=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 44: postfix_expression "-=" assignment_expression
                                  ↳ 33: conditional_expression
                                        ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                              ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                  "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 44: postfix_expression "-=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "//=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 49: postfix_expression "//=" assignment_expression
                                   ↳ 33: conditional_expression
                                         ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                               ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                   "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 49: postfix_expression "//=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "/=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 46: postfix_expression "/=" assignment_expression
                                  ↳ 33: conditional_expression
                                        ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                              ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                  "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 46: postfix_expression "/=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "<<=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 41: postfix_expression "<<=" assignment_expression
                                   ↳ 33: conditional_expression
                                         ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                               ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                   "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 41: postfix_expression "<<=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 34: postfix_expression "=" assignment_expression
                                 ↳ 33: conditional_expression
                                       ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                             ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                 "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 34: postfix_expression "=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression ">>=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 42: postfix_expression ">>=" assignment_expression
                                   ↳ 33: conditional_expression
                                         ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                               ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                   "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 42: postfix_expression ">>=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression ">>>=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 40: postfix_expression ">>>=" assignment_expression
                                    ↳ 33: conditional_expression
                                          ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                                ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                    "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 40: postfix_expression ">>>=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "^=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 38: postfix_expression "^=" assignment_expression
                                  ↳ 33: conditional_expression
                                        ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                              ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                  "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 38: postfix_expression "^=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "|=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 37: postfix_expression "|=" assignment_expression
                                  ↳ 33: conditional_expression
                                        ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                              ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                  "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 37: postfix_expression "|=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: postfix_expression "||=" assignment_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    assignment_expression
    ↳ 35: postfix_expression "||=" assignment_expression
                                   ↳ 33: conditional_expression
                                         ↳ 51: expression                    "if" logical_or_expression "else" conditional_expression
                                               ↳ 32: assignment_expression •
  Second reduce derivation
    assignment_expression
    ↳ 33: conditional_expression
          ↳ 51: expression                                                   "if" logical_or_expression "else" conditional_expression
                ↳ 32: assignment_expression
                      ↳ 35: postfix_expression "||=" assignment_expression •
src/parser.yy: warning: reduce/reduce conflict on token "if" [-Wcounterexamples]
  Example: expression "if" logical_or_expression "else" conditional_expression • "if" logical_or_expression "else" conditional_expression
  First reduce derivation
    conditional_expression
    ↳ 51: expression "if" logical_or_expression "else" conditional_expression
                                                       ↳ 51: expression                           "if" logical_or_expression "else" conditional_expression
                                                             ↳ 32: assignment_expression
                                                                   ↳ 33: conditional_expression •
  Second reduce derivation
    conditional_expression
    ↳ 51: expression                                                                              "if" logical_or_expression "else" conditional_expression
          ↳ 32: assignment_expression
                ↳ 33: conditional_expression
                      ↳ 51: expression "if" logical_or_expression "else" conditional_expression •
src/parser.yy: warning: shift/reduce conflict on token "if" [-Wcounterexamples]
time limit exceeded: 6.000000
  First example: $@1 program "proc" identifier "start" statements "if" condition "then" "\n" statements "else" • "if" condition "then" "\n" statements "end" "\n" statements "end" "\n" $end
  Shift derivation
    $accept
    ↳ 0: module                                                                                                                                                                                                                   $end
         ↳ 2: $@1 program
                  ↳ 6: program procedure
                               ↳ 7: "proc" identifier "start" statements                                                                                                                                    statements "end" "\n"
                                                              ↳ 9: statements statement
                                                                              ↳ 12: compound_statement                                                                                                 "\n"
                                                                                    ↳ 15: if_block
                                                                                          ↳ 21: "if" condition "then" "\n" statements else_if_block                                              "end"
                                                                                                                                      ↳ 23: else_if_statement
                                                                                                                                            ↳ 25: "else" • "if" condition "then" "\n" statements
  Second example: $@1 program "proc" identifier "start" "\n" statements "if" condition "then" "\n" statements "else" • "if" condition "then" "\n" statements "end" "\n" "end" "\n" "end" "\n" $end
  Reduce derivation
    $accept
    ↳ 0: module                                                                                                                                                                                                                                            $end
         ↳ 2: $@1 program
                  ↳ 6: program procedure
                               ↳ 7: "proc" identifier "start" "\n" statements                                                                                                                                                                   "end" "\n"
                                                                   ↳ 9: statements statement
                                                                                   ↳ 12: compound_statement                                                                                                                                "\n"
                                                                                         ↳ 15: if_block
                                                                                               ↳ 20: "if" condition "then" "\n" statements "else" statements                                                                         "end"
                                                                                                                                                  ↳ 9: statements statement
                                                                                                                                                       ↳ 8: ε •   ↳ 12: compound_statement                                      "\n"
                                                                                                                                                                        ↳ 15: if_block
                                                                                                                                                                              ↳ 19: "if" condition "then" "\n" statements "end"
src/parser.yy: warning: shift/reduce conflict on token "if" [-Wcounterexamples]
  First example: $@1 program "proc" identifier "start" statements "if" condition "then" "\n" statements else_if_block "else" • "if" condition "then" "\n" statements "end" "\n" statements "end" "\n" $end
  Shift derivation
    $accept
    ↳ 0: module                                                                                                                                                                                                                                 $end
         ↳ 2: $@1 program
                  ↳ 6: program procedure
                               ↳ 7: "proc" identifier "start" statements                                                                                                                                                  statements "end" "\n"
                                                              ↳ 9: statements statement
                                                                              ↳ 12: compound_statement                                                                                                               "\n"
                                                                                    ↳ 15: if_block
                                                                                          ↳ 21: "if" condition "then" "\n" statements else_if_block                                                            "end"
                                                                                                                                      ↳ 24: else_if_block else_if_statement
                                                                                                                                                          ↳ 25: "else" • "if" condition "then" "\n" statements
  Second example: $@1 program "proc" identifier "start" "\n" statements "if" condition "then" "\n" statements else_if_block "else" • "if" condition "then" "\n" statements "end" "\n" "end" "\n" "end" "\n" $end
  Reduce derivation
    $accept
    ↳ 0: module                                                                                                                                                                                                                                                          $end
         ↳ 2: $@1 program
                  ↳ 6: program procedure
                               ↳ 7: "proc" identifier "start" "\n" statements                                                                                                                                                                                 "end" "\n"
                                                                   ↳ 9: statements statement
                                                                                   ↳ 12: compound_statement                                                                                                                                              "\n"
                                                                                         ↳ 15: if_block
                                                                                               ↳ 22: "if" condition "then" "\n" statements else_if_block "else" statements                                                                         "end"
                                                                                                                                                                ↳ 9: statements statement
                                                                                                                                                                     ↳ 8: ε •   ↳ 12: compound_statement                                      "\n"
                                                                                                                                                                                      ↳ 15: if_block
                                                                                                                                                                                            ↳ 19: "if" condition "then" "\n" statements "end"
